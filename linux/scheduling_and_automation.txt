at  : 
##########################

~ » at 3:54 pm 
warning: commands will be executed using /bin/sh
at> date >> date.logs 
at> <EOT>
job 3 at Wed Oct 19 15:54:00 2022
~ » at -l 
3	Wed Oct 19 15:54:00 2022 a vagrant


~ >> at -r 3
~ >> at -l 
~ >> 

#run command by at : 
at 5:30pm
> date >> date.log

# run script by at : 
at 5:30pm -f $script_path 

at -l  >> list of the scheduled_tasks
at -r job_num >> remove scheduled_job
ctrl + d : exit form at prompet 

~ >> at + 5 minutes 
> 

~ >> at + 5 days 
> 

-------------------------------


cron : 
##########################

systemctl status cron 
crontab -e  >> to open the cronfile

command syntax in the cronfile : 
m h dom mon dow command 

crontab_guru : https://crontab.guru/ 

m : minute. 
    * >> every minutes 
    */5 >> evey 5th minute
    15/5 >> evey 5th minute from 15 thought 59
    0-45/5 >> evey 5th minute from 0 thought 45

h : 0-23 
   * >> every hours 

dom : day of the mounth. 
    * >> every days of the mounth 
    15 >> 15th day of every mounths ( youm 15 mn kl mounth) 

mon : 1 - 12 

dow : day of the mounth 0 - 6 
    0 : monday 
    6 : sunday 
    MON : monday 
    MON,SAT : monday and saturday 
    MON-SAT : evey days between Monday and Saturday 


# /etc/crontab : after edit in this file , restart service cron : systemctl restart cron.service 

# Example of job definition:
.---------------- minute (0 - 59)
|  .------------- hour (0 - 23)
|  |  .---------- day of month (1 - 31)
|  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
|  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
|  |  |  |  |
*  *  *  *  * user-name command to be executed
17 *  *  *  *	root    cd / && run-parts --report /etc/cron.hourly
25 6  *  *  *	root	test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.daily )
47 6  *  *  7	root	test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.weekly )
52 6  1  *  *	root	test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.monthly )


Cron Tips : 
https://crontab.guru/tips.html

Tip 1: If the day-of-month or day-of-week part starts with a *, they form an intersection. Otherwise they form a union. * * 3 * 1 runs on the 3rd day of the month and on Monday (union), whereas * * */2 * 1 runs on every second day of the month only if it's also a Monday (intersection). The manpage is incorrect about this detail. More info.

Tip 2: Run your servers including the cron process in UTC timezone. Why?

Tip 3: Some cron implementations allow to specify years and seconds. However, cron is not the best tool if you need to operate at those levels, which is also why crontab.guru doesn't support them.

Tip 4: Don't use @reboot because it has too many issues.

Tip 5: More difficult schedules can be realized by combining multiple cron expressions. For example, if you need to run X every 90 minutes, create one crontab entry that runs X every 3 hours on the hour (0 */3 * * *), and a second crontab entry that runs X every 3 hours with an offset (30 1/3 * * *).

Tip 6: Another alternative for complicated schedules is Mcron.  

